import { IControlBaseProps } from '@models/common/ControlTypes';

export enum FilterTypeEnum {
    LEGAL_ENTITY = 'legalEntity',
    RUN_TYPE = 'runTypes',
    PERIOD = 'payRunPeriods',
    PPN = 'ppNs',
    CODE = 'codes',
    EMPLOYMENT_STATUS = 'employmentStatus',
    NETPAYVARIANCE = 'netPayVariance',
    EARNINGVARIANCE = 'earningVariance',
    ADDED_BY = 'addedBy',
    ADJUSTMENT_TYPE = 'adjustmentType',
    SAVED_BY = 'savedBy',
    SAVED_BY_USERID = 'savedByUserId',
    FIRST_NAME = 'firstName',
    DEDUCTIONCODES = 'deductionCodes',
    EARNINGCODES = 'earningCodes',
    TAXCODES = 'taxCodes',
    SALARY = 'salary',
    TOPFILTERS = 'topFilters',
    SIDEFILTERS = 'sideFilters',
    CURRENTEMPLOYEE = 'currentEmployee',
    FORMEREMPLOYEE = 'formerEmployee',
    NEVEREMPLOYEE = 'neverEmployee',
    DATE = 'date',
    DATEWITHOPERATOR = 'dateWithOperator',
    DROPDOWN = 'dropdown',
    DROPDOWNWITHOPERATOR = 'dropdownWithOperator',
    BUSINESSDATE = 'BusinessDate',
    RETRO = 'isRetro',
    IMPORT_IDENTIFIER = 'importIdentifier',
    IMPORT_SET = 'importSet',
    TIME_DATA_SOURCE = 'timeDataSources',
    PAYRUN_MSGTYPE_SOURCE = 'PayRunMessageType',
    HOURS = 'hours',
    SAVED_FILTERS = 'savedFilters',
    YEAR = 'year',
    QUARTER = 'quarter',
    COUNTRY = 'country',
    REGION = 'region',
    PAYGROUP = 'payGroup',
    EMPLOYEE = 'employee',
    MORE_OPTIONS_MENU = 'moreOptionsMenu',
    VIEW_BY = 'viewBy',
    CHECK = 'checks',
    PROJECT = 'project',
}

export const FilterSelectorProps: { [key: string]: IControlBaseProps } = {
    [FilterTypeEnum.LEGAL_ENTITY]: {
        id: FilterTypeEnum.LEGAL_ENTITY,
        testId: 'LegalEntity',
        labelKey: 'LegalEntity',
    },
    [FilterTypeEnum.RUN_TYPE]: {
        id: FilterTypeEnum.RUN_TYPE,
        testId: 'RunType',
        labelKey: 'RunType',
    },
    [FilterTypeEnum.PERIOD]: {
        id: FilterTypeEnum.PERIOD,
        testId: 'Period',
        labelKey: 'Period',
    },
    [FilterTypeEnum.PPN]: {
        id: FilterTypeEnum.PPN,
        testId: 'PPN',
        labelKey: 'PPN',
    },
    [FilterTypeEnum.CODE]: {
        id: FilterTypeEnum.CODE,
        testId: 'Code',
        labelKey: 'Code',
    },
    [FilterTypeEnum.EMPLOYMENT_STATUS]: {
        id: FilterTypeEnum.EMPLOYMENT_STATUS,
        testId: 'EmploymentStatus',
        labelKey: 'EmploymentStatus',
    },
    [FilterTypeEnum.ADDED_BY]: {
        id: FilterTypeEnum.ADDED_BY,
        testId: 'AddedBy',
        labelKey: 'AddedBy',
    },
    [FilterTypeEnum.ADJUSTMENT_TYPE]: {
        id: FilterTypeEnum.ADJUSTMENT_TYPE,
        testId: 'AdjustmentType',
        labelKey: 'AdjustmentType',
    },
    [FilterTypeEnum.SAVED_BY]: {
        id: FilterTypeEnum.SAVED_BY,
        testId: 'SavedBy',
        labelKey: 'SavedBy',
    },
    [FilterTypeEnum.SAVED_BY_USERID]: {
        id: FilterTypeEnum.SAVED_BY_USERID,
        testId: 'SavedBy',
        labelKey: 'SavedBy',
    },
    [FilterTypeEnum.IMPORT_SET]: {
        id: FilterTypeEnum.IMPORT_SET,
        testId: 'ImportSet',
        labelKey: 'ImportSet',
    },
    [FilterTypeEnum.NETPAYVARIANCE]: {
        id: FilterTypeEnum.NETPAYVARIANCE,
        testId: 'NetPayVariance',
        labelKey: 'NetPayVariance',
    },
    [FilterTypeEnum.EARNINGVARIANCE]: {
        id: FilterTypeEnum.EARNINGVARIANCE,
        testId: 'EarningVariance',
        labelKey: 'EarningVariance',
    },
    [FilterTypeEnum.PROJECT]: {
        id: FilterTypeEnum.PROJECT,
        testId: 'Project',
        labelKey: 'Project',
    },
    //Below are examples of filters tat can be used for DataFilter
    [FilterTypeEnum.FIRST_NAME]: {
        id: FilterTypeEnum.FIRST_NAME,
        testId: 'FirstName',
        labelKey: 'FirstName',
    },
    [FilterTypeEnum.DEDUCTIONCODES]: {
        id: FilterTypeEnum.DEDUCTIONCODES,
        testId: 'DeductionCodes',
        labelKey: 'DeductionCodes',
    },
    [FilterTypeEnum.EARNINGCODES]: {
        id: FilterTypeEnum.EARNINGCODES,
        testId: 'EarningCodes',
        labelKey: 'EarningCodes',
    },
    [FilterTypeEnum.TAXCODES]: {
        id: FilterTypeEnum.TAXCODES,
        testId: 'TaxCodes',
        labelKey: 'TaxCodes',
    },
    [FilterTypeEnum.SALARY]: {
        id: FilterTypeEnum.SALARY,
        testId: 'Salary',
        labelKey: 'Salary',
    },
    [FilterTypeEnum.CURRENTEMPLOYEE]: {
        id: FilterTypeEnum.CURRENTEMPLOYEE,
        testId: 'currentEmployee',
        labelKey: 'currentEmployee',
    },
    [FilterTypeEnum.FORMEREMPLOYEE]: {
        id: FilterTypeEnum.FORMEREMPLOYEE,
        testId: 'formerEmployee',
        labelKey: 'formerEmployee',
    },
    [FilterTypeEnum.NEVEREMPLOYEE]: {
        id: FilterTypeEnum.NEVEREMPLOYEE,
        testId: 'neverEmployee',
        labelKey: 'neverEmployee',
    },
    [FilterTypeEnum.DATE]: {
        id: FilterTypeEnum.DATE,
        testId: 'date',
        labelKey: 'date',
    },
    [FilterTypeEnum.DATEWITHOPERATOR]: {
        id: FilterTypeEnum.DATEWITHOPERATOR,
        testId: 'dateWithOperator',
        labelKey: 'dateWithOperator',
    },
    [FilterTypeEnum.DROPDOWN]: {
        id: FilterTypeEnum.DROPDOWN,
        testId: 'dropdown',
        labelKey: 'dropdown',
    },
    [FilterTypeEnum.DROPDOWNWITHOPERATOR]: {
        id: FilterTypeEnum.DROPDOWNWITHOPERATOR,
        testId: 'dropdownWithOperator',
        labelKey: 'dropdownWithOperator',
    },
    [FilterTypeEnum.BUSINESSDATE]: {
        id: FilterTypeEnum.BUSINESSDATE,
        testId: 'BusinessDate',
        labelKey: 'BusinessDate',
    },
    [FilterTypeEnum.TOPFILTERS]: {
        id: FilterTypeEnum.TOPFILTERS,
        testId: 'topFilters',
        labelKey: 'topFilters',
    },
    [FilterTypeEnum.SIDEFILTERS]: {
        id: FilterTypeEnum.SIDEFILTERS,
        testId: 'sideFilters',
        labelKey: 'sideFilters',
    },
    [FilterTypeEnum.RETRO]: {
        id: FilterTypeEnum.RETRO,
        testId: 'Retro',
        labelKey: 'Retro',
    },
    [FilterTypeEnum.IMPORT_IDENTIFIER]: {
        id: FilterTypeEnum.IMPORT_IDENTIFIER,
        testId: 'ImportIdentifier',
        labelKey: 'ImportIdentifier',
    },
    [FilterTypeEnum.TIME_DATA_SOURCE]: {
        id: FilterTypeEnum.TIME_DATA_SOURCE,
        testId: 'TimeDataSources',
        labelKey: 'TimeDataSources',
    },
    [FilterTypeEnum.PAYRUN_MSGTYPE_SOURCE]: {
        id: FilterTypeEnum.PAYRUN_MSGTYPE_SOURCE,
        testId: 'PayRunMessageType',
        labelKey: 'Source',
    },
    [FilterTypeEnum.HOURS]: {
        id: FilterTypeEnum.HOURS,
        testId: 'Hours',
        labelKey: 'Hours',
    },
    [FilterTypeEnum.SAVED_FILTERS]: {
        id: FilterTypeEnum.SAVED_FILTERS,
        testId: 'SavedFilters',
        labelKey: 'SavedFiltersLabel',
    },
    [FilterTypeEnum.YEAR]: {
        id: FilterTypeEnum.YEAR,
        testId: 'Year',
        labelKey: 'Year',
    },
    [FilterTypeEnum.QUARTER]: {
        id: FilterTypeEnum.QUARTER,
        testId: 'Quarter',
        labelKey: 'Quarter',
    },
    [FilterTypeEnum.COUNTRY]: {
        id: FilterTypeEnum.COUNTRY,
        testId: 'Country',
        labelKey: 'Country',
    },
    [FilterTypeEnum.REGION]: {
        id: FilterTypeEnum.REGION,
        testId: 'Region',
        labelKey: 'Region',
    },
    [FilterTypeEnum.PAYGROUP]: {
        id: FilterTypeEnum.PAYGROUP,
        testId: 'PayGroup',
        labelKey: 'PayGroup',
    },
    [FilterTypeEnum.VIEW_BY]: {
        id: FilterTypeEnum.VIEW_BY,
        testId: 'ViewBy',
        labelKey: 'ViewBy',
    },
    [FilterTypeEnum.CHECK]: {
        id: FilterTypeEnum.CHECK,
        testId: 'Check',
        labelKey: 'Check',
    },
};

export enum UserSelectionActionsEnum {
    UPDATE_FILTER_OPTIONS = 'UPDATE_FILTER_OPTIONS',
    CLEAR_SEARCH_AND_FILTERS = 'CLEAR_SEARCH_AND_FILTERS',
    UPDATE_FILTERS = 'UPDATE_FILTERS',
    UPDATE_FILTERS_NEW = 'UPDATE_FILTERS_NEW',
    UPDATE_PAGE_FILTERS = 'UPDATE_PAGE_FILTERS',
    SET_SIDE_FILTERS = 'SET_SIDE_FILTERS',
    CONVERT_SIDE_FILTERS = 'CONVERT_SIDE_FILTERS',
    CLEAR_ALL_FILTERS = 'CLEAR_ALL_FILTERS',
    UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM',
    CLEAR_SEARCH_VALUE = 'CLEAR_SEARCH_VALUE',
    UPDATE_SELECTED_IDS = 'UPDATE_SELECTED_IDS',
    SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM',
    SET_PAGE = 'SET_PAGE',
    REFRESH = 'REFRESH',
    UPDATE_FILTER_UNIQUEID = 'UPDATE_FILTER_UNIQUEID',
}

export enum GridNameEnum {
    PAY_RUN_OVERVIEW = 'payRunOverview',
    PREVIEW_SUMMARY = 'previewSummary',
    PREVIEW_CODE_LEVEL = 'previewCodeLevel',
    PREVIEW_CODE_EMPLOYEE = 'previewCodeEmployee',
    PREVIEW_EMPLOYEE = 'previewEmployee',
    QUICK_ENTRY = 'quickEntry',
    DATA_ENTRY_SUMMARY = 'dataEntrySummary',
    EMPLOYEE_VARIANCES = 'employeeVariances',
    PAY_RUN_ISSUES_ERRORS = 'payRunIssuesErrors',
    PAY_RUN_ISSUES_WARNINGS = 'payRunIssuesWarnings',
    PAY_RUN_ISSUES_INFORMATION = 'payRunIssuesInformation',
    CHECK = 'check',
    ADJUSTMENT = 'adjustment',
    PREVIEW_PAYMENTS = 'previewPayments',
    PREVIEW_PAYMENT_ITEMS = 'previewPaymentItems',
    PREVIEW_PAYMENT_TOTAL_ITEMS = 'previewPaymentTotalItems',
    PREVIEW_PAYMENT_EMPLOYEES = 'previewPaymentEmployees',
    CHECK_ENTRY = 'checkEntry',
    ADJUSTMENT_ENTRY = 'adjustmentEntry',
    TIME_DATA = 'timeData',
    TIME_DATA_EMPLOYEE = 'timeDataEmployee',
    AUDIT_REPORTS = 'auditReports',
    AUDIT_DETAILS = 'auditDetails',
    ALL_REPORTS = 'allReports',
    WAGE_TAX_OVERVIEW = 'wageTaxOverview',
    WAGE_TAX_LEGAL_ENTITY = 'wageTaxLegalEntity',
    EMPLOYEE_ADJUSTMENT_WAGE_TAX = 'employeeAdjustmentWageTax',
    WAGE_TAX_EMPLOYEE_FLYOUT = 'wageTaxEmployeeFlyout',
    AUTO_VOID_CHECKS = 'autoVoidChecks',
    PREVIEW_EMPLOYEE_FLYOUT = 'previewEmployeeFlyout',
    GL_PREVIEW_EMPLOYEE_FLYOUT = 'glPreviewEmployeeFlyout',
}

export const TIME_DATA_SOURCE_TIMESHEET = '#TimeSheet#';
export const TIME_DATA_SOURCE_NO_SOURCE = '#NoSource#';
export const TIME_DATA_IMPORT_IDENTIFIER_NO_IDENTIFIER = '#NoIdentifier#';
